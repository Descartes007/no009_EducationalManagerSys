<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.StudentMapper">

    <sql id="Base_Column_List">
        id,username,password,name,avatar,role,college_id,speciality_id,class_id,score
    </sql>

    <select id="selectAll" resultType="com.example.entity.Student">
        select student.*, college.name as collegeName, speciality.name as specialityName, classes.name as className
        from student
        left join college on student.college_id = college.id
        left join speciality on student.speciality_id = speciality.id
        left join classes on student.class_id = classes.id
        <where>
            <if test="id != null"> and id= #{id}</if>
            <if test="username != null"> and username like concat('%', #{username}, '%')</if>
            <if test="password != null"> and password= #{password}</if>
            <if test="name != null"> and name= #{name}</if>
            <if test="avatar != null"> and avatar= #{avatar}</if>
            <if test="role != null"> and role= #{role}</if>
        </where>
    </select>

    <select id="selectById" resultType="com.example.entity.Student">
        select
        <include refid="Base_Column_List" />
        from student
        where id = #{id}
    </select>

    <delete id="deleteById">
        delete from student
        where  id = #{id}
    </delete>

    <insert id="insert" parameterType="com.example.entity.Student" useGeneratedKeys="true">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="username != null">username,</if>
                <if test="password != null">password,</if>
                <if test="name != null">name,</if>
                <if test="avatar != null">avatar,</if>
                <if test="role != null">role,</if>
                <if test="collegeId != null">college_id,</if>
                <if test="specialityId != null">spaciality_id,</if>
                <if test="classId != null">class_id,</if>
                <if test="score != null">score,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="username != null">#{username},</if>
                <if test="password != null">#{password},</if>
                <if test="name != null">#{name},</if>
                <if test="avatar != null">#{avatar},</if>
                <if test="role != null">#{role},</if>
                <if test="collegeId != null">#{collegeId},</if>
                <if test="specialityId != null">#{specialityId},</if>
                <if test="classId != null">#{classId},</if>
                <if test="score != null">#{score},</if>
        </trim>
    </insert>
    <!--college_id,spaciality_id,class_id,score-->
    <update id="updateById" parameterType="com.example.entity.Student">
        update student
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="role != null">
                role = #{role},
            </if>
            <if test="collegeId != null">
                college_id = #{collegeId},
            </if>
            <if test="specialityId != null">
                speciality_id = #{specialityId},
            </if>
            <if test="classId != null">
                class_id = #{classId},
            </if>
            <if test="score != null">
                score = #{score},
            </if>
        </set>
        where id = #{id} 
    </update>

</mapper>